비트마스크로 방문한 도시를 표시한다
dp[16][1<<16]

어느 도시에서 시작하든
그림을 그려보면 원형구조가 되기 때문에
비용이 상관없다

그래서 0번도시에서 시작하는걸로시작 후
할일 정하기 문제와 비슷한 방식으로 풀이한다



if(visit == (1<<N)-1)
  {
    if(cost[cur][0])
      return cost[cur][0];
    else
      return 17000000;
  }

모든도시를 순회했을 때
첫 도시로 돌아갈수 있다면 가는 비용 리턴
안되면 최댓값 리턴

int &ret = dp[cur][visit];
  if(ret)
    return ret;
  
  ret = 17000000;
  for(int i=0;i<N;i++)
  {
    if((visit&(1<<i))==0&&cost[cur][i])
    {
      ret = min(ret,cost[cur][i]+solve(i,visit|(1<<i)));
    }
  }

0~N번도시 중 그동안 가지 않았고 갈수 있는 도시를
갈 때 비용을 구하고 그 중에서 최솟값을 ret에 담아
리턴해준다