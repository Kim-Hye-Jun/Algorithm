#include <iostream>
#include <vector>
#include <stack>

using namespace std;

bool visit[32001]={false,};
int N,M;
vector< vector<int>> V;
stack<int> ret;
void dfs(int n);
int main() {

  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  cin >> N >> M;
  
  V.resize(N+1);
  int a,b;
  for(int i=0;i<M;i++)
  {
    cin >> a >> b;
    V[a].push_back(b);
  }

  for(int i=1;i<=N;i++)
  {
    if(!visit[i])
      dfs(i);
  }

  while(ret.size())
  {
    cout << ret.top() << "\n";
    ret.pop();
  }

}


void dfs(int n)
{
  visit[n]=true;
  for(auto w:V[n])
  {
    if(visit[w])
      continue;
    dfs(w);
  }
  
  ret.push(n);
}