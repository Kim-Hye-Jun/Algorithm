#include <iostream>
#include <cstring>
#include <queue>
#include <vector>
#include <algorithm>
using namespace std;
int N,M;

priority_queue<int, vector <int>,greater<int>> ret;
vector <vector<int>> adj;
bool visit[32001];
int degree[32001];
void PQ();

int main() {
  ios_base :: sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  memset(visit,false,sizeof(visit));
  
  cin >> N >> M;
  int a,b;
  adj.resize(N+1);
  for(int i=0;i<M;i++)
  {
    cin >> a >> b;
    adj[a].push_back(b);
    degree[b]++;
  }
  PQ();

}

void PQ()
{
  for(int i=1;i<=N;i++)
  {
    if(degree[i]==0)
      ret.push(i);
  }

  while(!ret.empty())
  {
    cout << ret.top() << " ";
    int n = ret.top();
    ret.pop();
    for(auto w:adj[n])
    {
      if(--degree[w]==0)
        ret.push(w);
    }
  }
}