난이도에 비해 생각보다 어려웠다

다익스트라 + dp 문제인데
dp가 다익스트라랑 섞여서 그런지 좀 다른느낌?? 이 든것 같다.

dist[N][K]에 N위치에 올 때까지 K번 지웠을 때의 거리의 최솟값을 저장하는데
다익스트라를 쓰면서 우선순위 큐에 현재까지의 비용 cost, 현재 정점 now, 지운횟수(포장) cnt를 저장

큐를 돌면서 dist보다 cost가 크면 무시( dist에는 최솟값을 저장하니 필요없으니까)
인접한 정점을 돌면서
다음정점으로 갈 때 지우고 갈때, 안지우고 갈때 2케이스별로 dist저장

안지우고 갈 경우 -> cost+weight(이동시 가중치) < dist[next][cnt]면 dist 바꿔주고 pq에 push
		  dist <= cost+weight면 넣을 필요없으니(이미 더 좋은 경우가 pq에 저장되었으니 )pass

지우고 갈 경우 -> cost < dist[next][cnt+1] 이면 dist 바꾸고 push

이런 식으로 다익스트라를 돌리고
마지막에
dist[N][0]~dist[N][K] 의 최솟값을 출력한다.