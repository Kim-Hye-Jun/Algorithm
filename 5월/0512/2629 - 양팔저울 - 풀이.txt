이 문제는 배낭문제
X이하의 값중에서 
조건에 맞는 값이 무엇인지를 찾는 문제이다.

배낭 알고리즘?
dp[]값에 가능한 값은 check를 하고 계속 갱신하는 느낌
브루트포스 느낌이 있다.

모든 추를 가지고 잴 수 있는 무게를 total이라고 하면
각 추를 뺄 수도 있고 반대편에 올려놓을 수도 있다.

추를 빼면 X-a, 반대편에 놓으면 X-2a인데
한번 check된 값은 dp[x] = 1 로 놓는다.

추의 개수를 N이라고 하면
N*(total-low)만큼 반복문을 돌려서
전체 경우를 check 해줄 수 있다.

low는 현재 경우의 최솟값인데 최솟값아래로는 
dp가 무조건 0일테니까 탐색할 필요가 없다.

