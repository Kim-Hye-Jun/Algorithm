이 문제는 이분탐색을 이용해서 푼다.

X가 답이라고 할 때
X의 범위를 1~10억으로 둬서 모든 경우를 탐색할 수는 없으니까
그 X를 이분탐색을 통해서 빠르게 찾는다.

그리고 출력을 할 때
처음 자르는 위치가 가장 앞에 있는 것을 출력을 해야하기 때문에
통나무를 뒤에서 부터 자를 때
최대한 길게 자른다 (  X에 최대한 가깝게)
그렇게 자르면 통나무의 앞부분을 맨 처음 자를 때의 길이가 최솟값이 나올 수 밖에 없다.

이 문제를 풀면서 이분탐색이 그냥 lower_bound를 찾을 때가 아니라
어떻게 활용을 할 수 있는지를 깨닫게 되었는데

# 무언가 조건을 만족하는 최솟값 or 최댓값을 찾을 때 #
많이 활용할 수 있는 것 같다.