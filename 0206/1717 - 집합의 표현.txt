#include <iostream>
#include <vector>

using namespace std;
int n,m;

void init();
int find(int u);
void merge(int u,int v);
vector <int> parent;
vector <int> Rank;

int main() {
  ios_base :: sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  cin >> n >> m;
  int a,b,c;
  init();
  for(int i=0;i<m;i++)
  {
    cin >> a >> b >> c;
    if(a==0)
    {
      merge(b,c);
    }
    else // a==1
    {
      if(find(b)==find(c))
        cout << "YES" << "\n";
      else
        cout << "NO" << "\n";
    }
  }
}

void init()
{
  parent.resize(n+1);
  Rank.resize(n+1);
  for(int i=0;i<n+1;i++)
  {
    parent[i]=i;
    Rank[i]=1;
  }
}

int find(int u)
{
  if(parent[u]==u)
    return u;
  else
  {
    return find(parent[u]);
  }
}

void merge(int u,int v)
{
  u = find(u);
  v = find(v);

  if(u==v)  return;
  if(Rank[u]>Rank[v]) swap(u,v);
  
  parent[u]=v;
  if(Rank[u]==Rank[v])
    Rank[v]++;

}