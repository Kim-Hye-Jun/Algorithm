#include <iostream>
#include <vector>
#include <set>

using namespace std;

int arr[9][9];
bool visit_row[10][10];
bool visit_col[10][10];
bool visit_rec[3][3][10];

void input();
bool solve(int,int);
int main()
{
  input();
  solve(0,0);
}

void input()
{
  ios_base:: sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  for(int i=0;i<9;i++)
  {
    for(int j=0;j<9;j++)
    {
      cin >> arr[i][j];
      if(arr[i][j])
      {
        visit_row[i][arr[i][j]]=true;
        visit_col[j][arr[i][j]]=true;
        visit_rec[i/3][j/3][arr[i][j]]=true;
      }
    }
  }
}

bool solve(int y, int x)
{
  if(x==8&&y==8)
  {
    if(arr[y][x]!=0)
    {
      for(int i=0;i<9;i++)
      {
        for(int j=0;j<9;j++)
        {
          cout << arr[i][j] << " ";
        }
        cout << "\n";
      }
      exit(0);
    }
    else
    {
      for(int i=1;i<=9;i++)
      {
        if(visit_row[y][i]==false && visit_col[x][i]==false && visit_rec[y/3][x/3][i]==false)
        {
          visit_row[y][i]=true;
          visit_col[x][i]=true;
          visit_rec[y/3][x/3][i]=true;
          arr[y][x]=i;

          for(int i=0;i<9;i++)
          {
            for(int j=0;j<9;j++)
              cout << arr[i][j] << " ";
            cout << "\n";
          }
          exit(0);
        }
      }
    }
    return false;
  }

  if(x>8)
  {
    x-=9;
    y+=1;
    return solve(y,x);
  }
  if(arr[y][x]!=0)
    return solve(y,x+1);
  
  for(int i=1;i<=9;i++)
  {
    if(visit_row[y][i]==false && visit_col[x][i]==false && visit_rec[y/3][x/3][i]==false)
    {
      visit_row[y][i]=true;
      visit_col[x][i]=true;
      visit_rec[y/3][x/3][i]=true;
      arr[y][x]=i;
      if(solve(y,x+1)==true)
        break;
      else
      {
        visit_row[y][i]=false;
        visit_col[x][i]=false;
        visit_rec[y/3][x/3][i]=false;
        arr[y][x]=0;
      }
    }
  }
  return false;

  
}