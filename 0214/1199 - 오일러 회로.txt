#include <iostream>
#include <vector>

using namespace std;

int N,total=0;
vector <vector<int>> adj;

void getEulerCircuit(int u, vector<int> &circuit);
void input();

bool visit[1001];

int main()
{
  input();
  vector <int> circuit;
  getEulerCircuit(1,circuit);
  for(auto w:circuit)
  {
    if(visit[w]==false)
    {
      visit[w] = true;
      total++;
    }
  }
  if(total!=N)
  {
    cout << -1;
    return 0;
  }
  
  if(circuit.front()!=circuit.back())
  {
    cout << -1;
    return 0;
  }

  for(auto w : circuit)
  {
    cout << w << " ";
  }
}

void input()
{
  ios_base :: sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  cin >> N;
  adj.resize(N+1);
  for(int i=1;i<=N;i++)
  {
    adj[i].resize(N+1);
    for(int j=1;j<=N;j++)
    {
      cin >> adj[i][j];
    }
  }
}

void getEulerCircuit(int u, vector<int> &circuit)
{
  for(int i=1;i<adj.size();i++)
  {
    while(adj[u][i])
    {
      adj[u][i]--;
      adj[i][u]--;
      getEulerCircuit(i,circuit);
    }
  }
  circuit.push_back(u);
}